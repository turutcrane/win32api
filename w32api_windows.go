// Code generated by mkapisys. DO NOT EDIT.
package win32api

type Wndclassex struct {
	Size       UINT
	Style      UINT
	WndProc    WNDPROC
	ClsExtra   int32
	WndExtra   int32
	Instance   HINSTANCE
	Icon       HICON
	Cursor     HCURSOR
	Background HBRUSH
	MenuName   *uint16
	ClassName  *uint16
	IconSm     HICON
}

type Createstruct struct {
	CreateParams LPVOID
	Instance     HINSTANCE
	Menu         HMENU
	Parent       HWND
	Cy           int32
	Cx           int32
	Y            int32
	X            int32
	Style        LONG
	Name         *uint16
	Class        *uint16
	ExStyle      DWORD
}

type Point struct {
	X LONG
	Y LONG
}

type Points struct {
	X SHORT
	Y SHORT
}

type Rect struct {
	Left   LONG
	Top    LONG
	Right  LONG
	Bottom LONG
}

type Paintstruct struct {
	Hdc       HDC
	Erase     BOOL
	Paint     Rect
	Restore   BOOL
	IncUpdate BOOL
	Reserved  [32]BYTE
}

type Findreplace struct {
	StructSize     DWORD
	Owner          HWND
	Instance       HINSTANCE
	Flags          DWORD
	FindWhat       *uint16
	ReplaceWith    *uint16
	FindWhatLen    WORD
	ReplaceWithLen WORD
	CustData       LPARAM
	Hook           LPFRHOOKPROC
	TemplateName   *uint16
}

//sys ScreenToClient(hWnd HWND, lpPoint *Point) (r bool) = user32.ScreenToClient
//sys PtInRegion(hrgn HRGN, x int, y int) (r bool) = gdi32.PtInRegion
//sys EndDeferWindowPos(hWinPosInfo HDWP) (r bool, err error) [failretval==false] = user32.EndDeferWindowPos
//sys CreateSolidBrush(color COLORREF) (r HBRUSH) = gdi32.CreateSolidBrush
//sys DeleteObject(ho HGDIOBJ) (r bool) = gdi32.DeleteObject
//sys CreateFont(cHeight int, cWidth int, cEscapement int, cOrientation int, cWeight int, bItalic bool, bUnderline bool, bStrikeOut bool, iCharSet DWORD, iOutPrecision DWORD, iClipPrecision DWORD, iQuality DWORD, iPitchAndFamily DWORD, pszFaceName *uint16) (r HFONT) = gdi32.CreateFontW
//sys CreateRectRgn(x1 int, y1 int, x2 int, y2 int) (r HRGN) = gdi32.CreateRectRgn
//sys DestroyWindow(hWnd HWND) (r bool, err error) [failretval==false] = user32.DestroyWindow
//sys PostMessage(hWnd HWND, Msg UINT, wParam WPARAM, lParam LPARAM) (r bool, err error) [failretval==false] = user32.PostMessageW
//sys IsRectEmpty(lprc *Rect) (r bool) = user32.IsRectEmpty
//sys AdjustWindowRectEx(lpRect *Rect, dwStyle DWORD, bMenu bool, dwExStyle DWORD) (r bool, err error) [failretval==false] = user32.AdjustWindowRectEx
//sys SetParent(hWndChild HWND, hWndNewParent HWND) (r HWND, err error) = user32.SetParent
//sys SetWindowPos(hWnd HWND, hWndInsertAfter HWND, X int, Y int, cx int, cy int, uFlags UINT) (r bool, err error) [failretval==false] = user32.SetWindowPos
//sys dialogBoxParamW(hInstance HINSTANCE, lpTemplateName *uint16, hWndParent HWND, lpDialogFunc DLGPROC, dwInitParam LPARAM) (r INT_PTR, err error) [failretval==0xffffffff] = user32.DialogBoxParamW
//sys EndDialog(hDlg HWND, nResult INT_PTR) (r bool, err error) [failretval==false] = user32.EndDialog
//sys SetFocus(hWnd HWND) (r HWND, err error) = user32.SetFocus
//sys FindText(Arg1 *Findreplace) (r HWND) = comdlg32.FindTextW
//sys CommDlgExtendedError() (r DWORD) = comdlg32.CommDlgExtendedError
//sys RegisterWindowMessage(lpString *uint16) (r UINT, err error) = user32.RegisterWindowMessageW
//sys SetWindowText(hWnd HWND, lpString *uint16) (r bool, err error) [failretval==false] = user32.SetWindowTextW
